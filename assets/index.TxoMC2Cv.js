var e=Object.defineProperty,a=(a,t,r)=>((a,t,r)=>t in a?e(a,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[t]=r)(a,"symbol"!=typeof t?t+"":t,r);import{c as t,m as r,ar as s,aJ as n,p as o,S as i,aK as p,aL as d,aM as m,aN as l,aO as c,aP as u,aQ as g,Y as y,C as b,ae as T,aR as h}from"./index-DaoIyQhi.js";import{s as E,f,t as P,i as S,n as v,l as G,a as O,u as I,b as U,c as k,d as A,e as L,p as $,g as D,h as M,j as x,k as w,m as C,M as q}from"./alova.esm.BwIAK7PD.js";import{u as R}from"./index.CqOBavWu.js";var N={name:"Vue",create:e=>r(e),dehydrate:e=>e.value,update:(e,a)=>{a.value=e},effectRequest({handler:e,removeStates:a,immediate:t,watchingStates:r}){s()&&n(a),t&&e(),f(r||[],(a,t)=>{i(a,()=>{e(t)},{deep:P})})},computed:e=>t(e),watch:(e,a)=>{i(e,a,{deep:P})},onMounted:e=>{s()?o(e):E(e,10)},onUnmounted:e=>{s()&&n(e)}},_={get:e=>l(e),set(e,a){m(e,a)},remove(e){d(e)},clear(){p()}};const B=(e,a)=>{const{url:t,data:r,type:s,headers:n}=e;let o,i=v,p=v;const d=new Promise((e,d)=>{const{config:m}=a,{requestType:l,timeout:y}=m;if("upload"===l){const a={},s={};S(r)&&Object.keys(r).forEach(e=>{["name","files","file","filePath"].includes(e)?s[e]=r[e]:a[e]=r[e]});const i=o=c({...m,...s,name:s.name,url:t,header:n,formData:a,timeout:y,success:a=>e(a),fail:e=>d(new Error(e.errMsg)),complete:v});p=e=>{i.onProgressUpdate(({totalBytesSent:a,totalBytesExpectedToSend:t})=>{e(a,t)})}}else if("download"===l){const a=o=u({...m,url:t,header:n,timeout:y,success:a=>e(a),fail:e=>d(new Error(e.errMsg)),complete:v});i=e=>{a.onProgressUpdate(({totalBytesWritten:a,totalBytesExpectedToWrite:t})=>{e(a,t)})}}else o=g({...m,url:t,data:r,header:n,method:s,timeout:y,success:a=>e(a),fail:e=>d(new Error(e.errMsg))})});return{response:()=>d,headers:()=>d.then(e=>e.header||{}),abort:()=>{o.abort()},onDownload:i,onUpload:p}};var j={...N,effectRequest(e,a){const{handler:t}=e;return e.handler=(...e)=>{G(e)>0?t(...e):Promise.resolve().then(()=>t(...e))},N.effectRequest(e,a)}};const H="color: black; font-size: 12px; font-weight: bolder",F=e=>{const a={};for(const t in e)a[t]={value:e[t]};return a},W=({isMock:e,url:a,method:t,headers:r,query:s,data:n,responseHeaders:o,response:i})=>{const p=console;p.groupCollapsed("%c"+(e?"mock":"Realtime"),`padding: 2px 6px; background: ${e?"#ccefff":"#ededed"}; color: ${e?"#64bde8":"#999999"};`,a),p.log("%c[Method]",H,t.toUpperCase()),p.log("%c[Request Headers]",H),p.table(F(r)),p.log("%c[Query String Parameters]",H),p.table(F(s)),p.log("%c[Request Body]",H,n||""),e&&(Object.keys(o).length>0&&(p.log("%c[Response Headers]",H),p.table(F(o))),p.log("%c[Response Body]",H,i||"")),p.groupEnd()},Q=({status:e=200,responseHeaders:a,statusText:t="ok",body:r})=>{const s=new Response(w(r)?r:JSON.stringify(r),{status:e,statusText:t,headers:a});return{response:s,headers:s.headers}},J=e=>e;var Y=(e,a=!0)=>({enable:a,data:e});const z={id:()=>Math.floor(1e4*Math.random()),name:(e="名称")=>`${e}_${Math.floor(1e3*Math.random())}`,code:(e="CODE")=>`${e}_${Math.floor(1e3*Math.random())}`,date:(e=0)=>{const a=new Date;return 0!==e&&a.setDate(a.getDate()+e),`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}-${String(a.getDate()).padStart(2,"0")}`},datetime:(e=0)=>{const a=new Date;return 0!==e&&a.setDate(a.getDate()+e),`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}-${String(a.getDate()).padStart(2,"0")} ${String(a.getHours()).padStart(2,"0")}:${String(a.getMinutes()).padStart(2,"0")}:${String(a.getSeconds()).padStart(2,"0")}`},boolean:()=>Math.random()>.5,number:(e=0,a=100)=>Math.floor(Math.random()*(a-e))+e,array:(e,a=10)=>{const t=[];for(let r=0;r<a;r++)t.push(e(r));return t},baseResponse:(e=null,a=2e3,t="操作成功")=>({code:a,data:e,msg:t}),listResponse:(e=[],a=e.length,t=!1,r=2e3,s="操作成功")=>({code:r,data:e,total:a,more:t,msg:s}),gcn:e=>({gid:z.id(),code:z.code("ORG"),name:z.name("组织")}),faEmp:e=>({gid:z.id(),code:z.code("EMP"),name:z.name("员工"),org:z.gcn(e)}),vehSaleEmp:e=>({gid:z.id(),code:z.code("VSE"),name:z.name("车销业务员"),faEmp:z.faEmp(e),org:z.gcn(e),wms:z.gcn(e)}),permission:e=>({module:`module_${e}`,moduleName:`模块${e}`,roleId:`role_${e}`,state:1}),codeName:(e,a="线路")=>({code:z.code(`LINE_${e}`),name:`${a}${e}`}),user:(e="01")=>({permissions:z.array(z.permission,5),sortLines:z.array(z.codeName,3),token:`mock_token_${Date.now()}`,roleCode:e,vehSaleEmp:z.vehSaleEmp(0)}),goods:e=>({gid:z.id(),code:z.code("GOODS"),name:z.name("商品"),gdCode:z.code("GDCODE"),spec:`规格${e}`,munit:"个",price:z.number(1,1e3)/100,qpc:z.number(1,10),qpcStr:`${z.number(1,10)}个/箱`,qty:z.number(1,100),qtyStr:`${z.number(1,100)}个`,busInvQty:z.number(1,100),advUseSignQty:z.number(1,100),version:1}),stat:()=>{const e=[100,1300,300,110,1310];return e[z.number(0,e.length-1)]}},V=Y({"[GET]/*":(e,a)=>(console.log(`[Mock] GET ${a}`,e),z.baseResponse({message:`Mock response for GET ${a}`,params:e})),"[POST]/*":(e,a)=>(console.log(`[Mock] POST ${a}`,e),z.baseResponse({message:`Mock response for POST ${a}`,params:e}))}),K=["available","pending","sold"],X=[{id:1,name:"Dogs"},{id:2,name:"Cats"},{id:3,name:"Birds"},{id:4,name:"Fish"},{id:5,name:"Reptiles"}],Z=[{id:1,name:"friendly"},{id:2,name:"playful"},{id:3,name:"calm"},{id:4,name:"energetic"},{id:5,name:"trained"},{id:6,name:"house-trained"}];function ee(e,a){const t=e||z.number(1,1e4),r=X[z.number(0,X.length-1)],s=z.array(()=>Z[z.number(0,Z.length-1)],z.number(1,3));return{id:t,category:r,name:z.name("Pet"),photoUrls:z.array(e=>`https://example.com/pet/${t}/photo${e+1}.jpg`,z.number(1,3)),tags:s,status:a||K[z.number(0,K.length-1)]}}const ae=Y({"[POST]/pet/{petId}/uploadImage":({params:e,data:a})=>(console.log(`[Mock] POST /pet/${e.petId}/uploadImage`,a),{code:200,type:"success",message:`Image uploaded successfully for pet ${e.petId}`,data:{petId:e.petId,imageUrl:`https://example.com/pet/${e.petId}/uploaded-${Date.now()}.jpg`}}),"[POST]/pet":({data:e})=>{console.log("[Mock] POST /pet",e);return{...e,id:z.number(10001,2e4)}},"[PUT]/pet":({data:e})=>(console.log("[Mock] PUT /pet",e),e.id?{...e,updatedAt:z.datetime()}:{status:400,body:{code:400,message:"Pet ID is required"}}),"[GET]/pet/findByStatus":({query:e})=>{console.log("[Mock] GET /pet/findByStatus",e);const a=e.status,t=Array.isArray(a)?a:[a],r=t.filter(e=>!K.includes(e));if(r.length>0)return{status:400,body:{code:400,message:`Invalid status value: ${r.join(", ")}`}};return z.array(e=>ee(void 0,t[e%t.length]),z.number(5,15))},"[GET]/pet/{petId}":({params:e})=>{console.log(`[Mock] GET /pet/${e.petId}`);const a=Number.parseInt(e.petId);return Number.isNaN(a)?{status:400,body:{code:400,message:"Invalid pet ID"}}:404===a?{status:404,body:{code:404,message:"Pet not found"}}:ee(a)},"[POST]/pet/{petId}":({params:e,data:a})=>{console.log(`[Mock] POST /pet/${e.petId}`,a);const t=Number.parseInt(e.petId);if(Number.isNaN(t))return{status:400,body:{code:400,message:"Invalid pet ID"}};if(404===t)return{status:404,body:{code:404,message:"Pet not found"}};return{...ee(t),...a,updatedAt:z.datetime()}},"[DELETE]/pet/{petId}":({params:e,headers:a})=>{console.log(`[Mock] DELETE /pet/${e.petId}`,a);const t=Number.parseInt(e.petId);return Number.isNaN(t)?{status:400,body:{code:400,message:"Invalid pet ID"}}:a.api_key?404===t?{status:404,body:{code:404,message:"Pet not found"}}:{code:200,message:`Pet ${t} deleted successfully`}:{status:401,body:{code:401,message:"API key is required"}}}},!0),te=["placed","approved","delivered"];const re=Y({"[GET]/store/inventory":()=>{console.log("[Mock] GET /store/inventory");const e={};return te.forEach(a=>{e[a]=z.number(0,100)}),e.pending=z.number(0,50),e.sold=z.number(0,200),e.available=z.number(10,300),e},"[POST]/store/order":({data:e})=>{if(console.log("[Mock] POST /store/order",e),!e.petId)return{status:400,body:{code:400,message:"Pet ID is required"}};if(!e.quantity||e.quantity<=0)return{status:400,body:{code:400,message:"Quantity must be greater than 0"}};return{id:z.number(10001,2e4),petId:e.petId,quantity:e.quantity,shipDate:e.shipDate||z.datetime(z.number(1,7)),status:"placed",complete:!1}},"[GET]/store/order/{orderId}":({params:e})=>{console.log(`[Mock] GET /store/order/${e.orderId}`);const a=Number.parseInt(e.orderId);return Number.isNaN(a)?{status:400,body:{code:400,message:"Invalid order ID"}}:404===a?{status:404,body:{code:404,message:"Order not found"}}:a<1||a>10?{status:400,body:{code:400,message:"Invalid ID supplied"}}:{id:a||z.number(1,1e4),petId:z.number(1,1e3),quantity:z.number(1,10),shipDate:z.datetime(z.number(1,30)),status:t||te[z.number(0,te.length-1)],complete:z.boolean()};var t},"[DELETE]/store/order/{orderId}":({params:e})=>{console.log(`[Mock] DELETE /store/order/${e.orderId}`);const a=Number.parseInt(e.orderId);return Number.isNaN(a)?{status:400,body:{code:400,message:"Invalid order ID"}}:404===a?{status:404,body:{code:404,message:"Order not found"}}:a<1?{status:400,body:{code:400,message:"Invalid ID supplied"}}:{code:200,message:`Order ${a} deleted successfully`}}},!0),se=[0,1,2];function ne(e,a){const t=e||z.name("user").toLowerCase();return{id:z.number(1,1e4),username:t,firstName:z.name("First"),lastName:z.name("Last"),email:`${t}@example.com`,password:"password123",phone:`1${z.number(1e9,9999999999)}`,userStatus:y(a)?a:se[z.number(0,se.length-1)]}}const oe=z.array(e=>ne(`user${e+1}`),10),ie=function(e,a={enable:!0}){let t={};return e.filter(({enable:e})=>e).forEach(({data:e})=>{t={...e,...t}}),function({enable:e=P,delay:a=2e3,httpAdapter:t,mockRequestLogger:r=W,mock:s,onMockResponse:n=Q,onMockError:o=J,matchMode:i="pathname"}={mock:{}}){return(p,d)=>{s=e&&s||{};const{url:m,data:l,type:c,headers:u}=p;let g=d.url,y=d.config.params||{};if("pathname"===i){const e=(e=>{const a=(e=/^[^/]*\/\//.test(e)?e:`//${e}`).split("/").slice(3),t={};let r=a.pop(),s="",n="";return r&&(r=r.replace(/\?[^?#]+/,e=>(e.substring(1).split("&").forEach(e=>{const[a,r]=e.split("=");a&&(t[a]=r)}),"")),r=r.replace(/#[^#]*/,e=>(n=e,"")),a.push(r),s=`/${a.join("/")}`),{pathname:s,query:t,hash:n}})(m);g=e.pathname,y=e.query}const b={},T=g.split("/"),h=Object.keys(s).filter(e=>{if(e.startsWith("-"))return O;let a="GET";if(e=e.replace(/^\[(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|TRACE|CONNECT)\]/i,(e,t)=>(a=t.toUpperCase(),"")),a!==c.toUpperCase())return O;const t=e.split("/");if(t.length!==T.length)return O;for(let r=0;r<t.length;r+=1){const e=t[r],a=(e.match(/^\{(.*)\}$/)||["",""])[1];if(a)b[a]=T[r];else if(e!==T[r])return O}return P});let E=h.find(e=>!/\{.*\}/.test(e));E=E||h.shift();const f=E?s[E]:I;if(f===I){if(t)return U(r)&&r({isMock:O,url:m,method:c,params:b,headers:u,query:y,data:{},responseHeaders:{}}),t(p,d);throw new Error(`cannot find the httpAdapter.\n[url]${m}`)}const S=k(),{resolve:v}=S;let{promise:G,reject:w}=S;const C=d.config.timeout||0;C>0&&setTimeout(()=>{w(new Error("request timeout"))},C);const q=setTimeout(()=>{try{const e=U(f)?f({query:y,params:b,data:A(l)?(()=>{try{return JSON.parse(l)}catch(e){return l}})():l||{},headers:u}):f;v(L(Promise,(a,t)=>{w=t,$(e).then(a).catch(t)}))}catch(e){w(e)}},a);return G=G.then(e=>{let a=200,t="ok",s={},o=I;return e===I?(a=404,t="api not found"):e&&D(e.status)&&A(e.statusText)?(a=e.status,t=e.statusText,s=e.responseHeaders||s,o=e.body):o=e,L(Promise,(e,r)=>{try{e(n({status:a,statusText:t,responseHeaders:s,body:o},{headers:u,query:y,params:b,data:l||{}},d))}catch(i){r(i)}}).then(e=>(U(r)&&r({isMock:P,url:m,method:c,params:b,headers:u,query:y,data:l||{},responseHeaders:s,response:o}),e))}).catch(e=>M(o(e,d))),{response:()=>G.then(({response:e})=>e&&"[object Response]"===x(e)?e.clone():e),headers:()=>G.then(({headers:e})=>e),abort:()=>{clearTimeout(q),w(new Error("The user abort request"))}}}}({...a,mock:t})}([V,ae,re,Y({"[POST]/user/createWithArray":({data:e})=>{if(console.log("[Mock] POST /user/createWithArray",e),!Array.isArray(e))return{status:400,body:{code:400,message:"Input should be an array of users"}};for(const a of e)if(!a.username)return{status:400,body:{code:400,message:"Username is required for all users"}};return{code:200,message:`Successfully created ${e.length} users`}},"[POST]/user/createWithList":({data:e})=>{if(console.log("[Mock] POST /user/createWithList",e),!Array.isArray(e))return{status:400,body:{code:400,message:"Input should be a list of users"}};for(const a of e)if(!a.username)return{status:400,body:{code:400,message:"Username is required for all users"}};return{code:200,message:`Successfully created ${e.length} users from list`}},"[GET]/user/login":({query:e})=>{console.log("[Mock] GET /user/login",e);const{username:a,password:t}=e;return a&&t?"admin"===a&&"admin"===t?{code:200,message:"logged in user session",token:`mock_token_${Date.now()}`,expiresIn:3600,user:ne("admin",1)}:"invalid"===a||"invalid"===t?{status:400,body:{code:400,message:"Invalid username/password supplied"}}:{code:200,message:"logged in user session",token:`mock_token_${Date.now()}`,expiresIn:3600,user:ne(a,1)}:{status:400,body:{code:400,message:"Username and password are required"}}},"[GET]/user/logout":()=>(console.log("[Mock] GET /user/logout"),{code:200,message:"ok"}),"[GET]/user/{username}":({params:e})=>{console.log(`[Mock] GET /user/${e.username}`);const a=e.username;if(!a)return{status:400,body:{code:400,message:"Username is required"}};if("notfound"===a)return{status:404,body:{code:404,message:"User not found"}};const t=oe.find(e=>e.username===a);return t||ne(a)},"[PUT]/user/{username}":({params:e,data:a})=>{console.log(`[Mock] PUT /user/${e.username}`,a);const t=e.username;if(!t)return{status:400,body:{code:400,message:"Username is required"}};if("notfound"===t)return{status:404,body:{code:404,message:"User not found"}};return{...ne(t),...a,username:t,updatedAt:z.datetime()}},"[DELETE]/user/{username}":({params:e})=>{console.log(`[Mock] DELETE /user/${e.username}`);const a=e.username;return a?"notfound"===a?{status:404,body:{code:404,message:"User not found"}}:{code:200,message:`User ${a} deleted successfully`}:{status:400,body:{code:400,message:"Username is required"}}},"[POST]/user":({data:e})=>{if(console.log("[Mock] POST /user",e),!e.username)return{status:400,body:{code:400,message:"Username is required"}};if(oe.find(a=>a.username===e.username))return{status:409,body:{code:409,message:"Username already exists"}};return{...ne(),...e,id:z.number(20001,3e4),createdAt:z.datetime()}}},!0)],{httpAdapter:B,onMockResponse:({status:e,body:a},t,r)=>{const{requestType:s}=r.config,n={};if("upload"===s)return{response:{data:a,statusCode:e},headers:n};if("download"===s){return{response:{tempFilePath:200===e?a:"",statusCode:e},headers:n}}return{response:{data:a,statusCode:e,header:n,cookies:[]},headers:n}},enable:!0,delay:400*Math.random()+200,mockRequestLogger:!1,matchMode:"pathname"});class pe extends Error{constructor(e,t,r){super(e),a(this,"code"),a(this,"data"),this.name="ApiError",this.code=t,this.data=r}}function de(e,a){const t=b();R("access_token","").value="",t.error({msg:"登录已过期，请重新登录！",duration:500});const r=setTimeout(()=>{clearTimeout(r),T.replaceAll({name:"login"})},500);throw new pe("登录已过期，请重新登录！",e,a)}const me=C({baseURL:"http://10.1.100.13:58080",...function({mockRequest:e}={}){return{statesHook:j,requestAdapter:e||B,l2Cache:_}}({mockRequest:ie}),statesHook:N,beforeRequest:e=>{e.config.headers["tenant-id"]="1",["PATCH","POST","PUT"].includes(e.type)&&(e.config.headers["Content-Type"]="application/json");const a=R("access_token","");a.value&&(e.config.headers.Authorization=`Bearer ${a.value}`),"GET"===e.type&&h(e.config.params)&&(e.config.params._t=Date.now())},responded:{onSuccess:async function(e){const a=b(),{statusCode:t,data:r}=e;if(200===t){const{code:e}=r||{};401!==e&&403!==e||de(e,r)}if(401!==t&&403!==t||de(t,r),t>=400)throw a.error(`Request failed with status: ${t}`),new pe(`Request failed with status: ${t}`,t,r);return r},onError:function(e,a){const t=b();throw e instanceof pe&&(401===e.code||403===e.code)&&de(e.code,e.data),"NetworkError"===e.name?t.error("网络错误，请检查您的网络连接"):"TimeoutError"===e.name?t.error("请求超时，请重试"):e instanceof pe?t.error(e.message||"请求失败"):t.error("发生意外错误"),e},onComplete:async()=>{}},timeout:6e4,cacheFor:null}),le={"app.updateUser":["PUT","/app-api/member/user/update"],"app.updateUserPassword":["PUT","/app-api/member/user/update-password"],"app.updateUserMobile":["PUT","/app-api/member/user/update-mobile"],"app.updateUserMobileByWeixin":["PUT","/app-api/member/user/update-mobile-by-weixin"],"app.resetUserPassword":["PUT","/app-api/member/user/reset-password"],"app.updateAddress":["PUT","/app-api/member/address/update"],"general.updateUser_1":["PUT","/admin-api/member/user/update"],"general.updateTag":["PUT","/admin-api/member/tag/update"],"general.updateSignInConfig":["PUT","/admin-api/member/sign-in/config/update"],"general.updateLevel":["PUT","/admin-api/member/level/update"],"general.updateGroup":["PUT","/admin-api/member/group/update"],"general.saveConfig":["PUT","/admin-api/member/config/save"],"rpc.reducePoint":["POST","/rpc-api/member/point/reducePoint"],"rpc.addPoint":["POST","/rpc-api/member/point/add"],"rpc.reduceExperience":["POST","/rpc-api/member/level/reduce"],"rpc.addExperience":["POST","/rpc-api/member/level/add"],"rpc.createAuth":["POST","/rpc-api/member/auth2/create"],"transProxyController.findByIds":["POST","/easyTrans/proxy/{targetClass}/findByIds"],"app.getWxaQrcode":["POST","/app-api/member/social-user/wxa-qrcode"],"app.socialBind":["POST","/app-api/member/social-user/bind"],"app.createSignInRecord":["POST","/app-api/member/sign-in/record/create"],"app.validateSmsCode":["POST","/app-api/member/auth/validate-sms-code"],"app.socialLogin":["POST","/app-api/member/auth/social-login"],"app.smsLogin":["POST","/app-api/member/auth/sms-login"],"app.sendSmsCode":["POST","/app-api/member/auth/send-sms-code"],"app.caRegisterSign":["POST","/app-api/member/auth/register/sign"],"app.refreshToken":["POST","/app-api/member/auth/refresh-token"],"app.logout":["POST","/app-api/member/auth/logout"],"app.login":["POST","/app-api/member/auth/login"],"app.createWeixinMpJsapiSignature":["POST","/app-api/member/auth/create-weixin-jsapi-signature"],"app.caRegister":["POST","/app-api/member/auth/ca/register"],"app.createAddress":["POST","/app-api/member/address/create"],"general.createTag":["POST","/admin-api/member/tag/create"],"general.createSignInConfig":["POST","/admin-api/member/sign-in/config/create"],"general.createLevel":["POST","/admin-api/member/level/create"],"general.createGroup":["POST","/admin-api/member/group/create"],"rpc.validateUser":["GET","/rpc-api/member/user/valid"],"rpc.getUserList":["GET","/rpc-api/member/user/list"],"rpc.getUserListByNickname":["GET","/rpc-api/member/user/list-by-nickname"],"rpc.getUser":["GET","/rpc-api/member/user/get"],"rpc.getUserByMobile":["GET","/rpc-api/member/user/get-by-mobile"],"rpc.getMemberLevel":["GET","/rpc-api/member/level/get"],"rpc.getConfig":["GET","/rpc-api/member/config/get"],"rpc.getAddress":["GET","/rpc-api/member/address/get"],"rpc.getDefaultAddress":["GET","/rpc-api/member/address/get-default"],"transProxyController.findById":["GET","/easyTrans/proxy/{targetClass}/findById/{id}"],"app.getUserInfo":["GET","/app-api/member/user/get"],"app.getSocialUser":["GET","/app-api/member/social-user/get"],"app.getSubscribeTemplateList":["GET","/app-api/member/social-user/get-subscribe-template-list"],"app.getSignRecordPage":["GET","/app-api/member/sign-in/record/page"],"app.getSignInRecordSummary":["GET","/app-api/member/sign-in/record/get-summary"],"app.getSignInConfigList":["GET","/app-api/member/sign-in/config/list"],"app.getPointRecordPage":["GET","/app-api/member/point/record/page"],"app.getLevelList":["GET","/app-api/member/level/list"],"app.getExperienceRecordPage":["GET","/app-api/member/experience-record/page"],"app.socialAuthRedirect":["GET","/app-api/member/auth/social-auth-redirect"],"app.getAddressList":["GET","/app-api/member/address/list"],"app.getAddress_1":["GET","/app-api/member/address/get"],"app.getDefaultUserAddress":["GET","/app-api/member/address/get-default"],"general.getUserPage":["GET","/admin-api/member/user/page"],"general.getUser_1":["GET","/admin-api/member/user/get"],"general.getTagPage":["GET","/admin-api/member/tag/page"],"general.getMemberTagList":["GET","/admin-api/member/tag/list"],"general.getSimpleTagList":["GET","/admin-api/member/tag/list-all-simple"],"general.getMemberTag":["GET","/admin-api/member/tag/get"],"general.getSignInRecordPage":["GET","/admin-api/member/sign-in/record/page"],"general.getSignInConfigList_1":["GET","/admin-api/member/sign-in/config/list"],"general.getSignInConfig":["GET","/admin-api/member/sign-in/config/get"],"general.getPointRecordPage_1":["GET","/admin-api/member/point/record/page"],"general.getLevelList_1":["GET","/admin-api/member/level/list"],"general.getSimpleLevelList":["GET","/admin-api/member/level/list-all-simple"],"general.getLevel":["GET","/admin-api/member/level/get"],"general.getLevelRecordPage":["GET","/admin-api/member/level-record/page"],"general.getLevelRecord":["GET","/admin-api/member/level-record/get"],"general.getGroupPage":["GET","/admin-api/member/group/page"],"general.getSimpleGroupList":["GET","/admin-api/member/group/list-all-simple"],"general.getGroup":["GET","/admin-api/member/group/get"],"general.getExperienceRecordPage_1":["GET","/admin-api/member/experience-record/page"],"general.getExperienceRecord":["GET","/admin-api/member/experience-record/get"],"general.getConfig_1":["GET","/admin-api/member/config/get"],"general.getAuthPage":["GET","/admin-api/member/auth2/page"],"general.getAuth":["GET","/admin-api/member/auth2/get"],"general.getAddressList_1":["GET","/admin-api/member/address/list"],"app.socialUnbind":["DELETE","/app-api/member/social-user/unbind"],"app.deleteAddress":["DELETE","/app-api/member/address/delete"],"general.deleteTag":["DELETE","/admin-api/member/tag/delete"],"general.deleteSignInConfig":["DELETE","/admin-api/member/sign-in/config/delete"],"general.deleteLevel":["DELETE","/admin-api/member/level/delete"],"general.deleteGroup":["DELETE","/admin-api/member/group/delete"]},ce=Object.create(null),ue=(e,a,t)=>{const r=e.join(".");if(ce[r])return ce[r];const s=new Proxy(function(){},{get(r,s){const n=[...e,s];return ue(n,a,t)},apply(e,s,[n]){const o=le[r];if(!o)throw new Error(`the api path of \`${r}\` is not found`);const i={...t[r],...n},[p,d]=o,m=i.pathParams,l=d.replace(/\{([^}]+)\}/g,(e,a)=>m[a]);delete i.pathParams;let c=i.data;if("[object Object]"===Object.prototype.toString.call(c)&&"undefined"!=typeof FormData){let e=!1;const a=new FormData;for(const t in c)a.append(t,c[t]),c[t]instanceof Blob&&(e=!0);c=e?a:c}return new q(p.toUpperCase(),a,l,i,c)}});return ce[r]=s,s},ge={"general.updateProductSpu":["PUT","/admin-api/pythmall/product/update"],"general.sortProductSpu":["PUT","/admin-api/pythmall/product/sort"],"general.onChain":["PUT","/admin-api/pythmall/product/on-chain"],"general.offTheShelf":["PUT","/admin-api/pythmall/product/off-shelf"],"general.updateCategory":["PUT","/admin-api/pythmall/product-category/update"],"general.updateActivity":["PUT","/admin-api/pythmall/activity/update"],"general.updateActivityStatus":["PUT","/admin-api/pythmall/activity/updateStatus"],"general.updateActivityAttendance":["PUT","/admin-api/pythmall/activity-attendance/update"],"transProxyController.findByIds":["POST","/easyTrans/proxy/{targetClass}/findByIds"],"app.createActivityAttendance":["POST","/app-api/pythmall/activity-attendance/create"],"general.createBatchTradeOrder":["POST","/admin-api/pythmall/trade-order/createBatch"],"general.createProductSpu":["POST","/admin-api/pythmall/product/create"],"general.createCategory":["POST","/admin-api/pythmall/product-category/create"],"general.createActivity":["POST","/admin-api/pythmall/activity/create"],"general.createActivityAttendance_1":["POST","/admin-api/pythmall/activity-attendance/create"],"transProxyController.findById":["GET","/easyTrans/proxy/{targetClass}/findById/{id}"],"app.getProductCategoryList":["GET","/app-api/pythmall/product-category/list"],"app.getProductCategoryList_1":["GET","/app-api/pythmall/product-category/list-by-ids"],"app.getProductCategoryChildList":["GET","/app-api/pythmall/product-category/children"],"app.getOrderPage":["GET","/app-api/pythmall/order/page"],"app.getOrderDetail":["GET","/app-api/pythmall/order/get"],"app.getActivityPage":["GET","/app-api/pythmall/activity/page"],"app.getActivity":["GET","/app-api/pythmall/activity/get"],"app.getActivityAttendancePage":["GET","/app-api/pythmall/activity-attendance/page"],"general.getTradeOrderPage":["GET","/admin-api/pythmall/trade-order/page"],"general.getTradeOrder":["GET","/admin-api/pythmall/trade-order/get"],"general.exportTradeOrderExcel":["GET","/admin-api/pythmall/trade-order/export-excel"],"general.getProductSpuPage":["GET","/admin-api/pythmall/product/page"],"general.getAllProductSpuPage":["GET","/admin-api/pythmall/product/page/all"],"general.getAllProductSpuList":["GET","/admin-api/pythmall/product/list/all"],"general.getProductSpu":["GET","/admin-api/pythmall/product/get"],"general.getCategoryList":["GET","/admin-api/pythmall/product-category/list"],"general.getCategory":["GET","/admin-api/pythmall/product-category/get"],"general.getActivityPage_1":["GET","/admin-api/pythmall/activity/page"],"general.getActivity_1":["GET","/admin-api/pythmall/activity/get"],"general.exportActivityExcel":["GET","/admin-api/pythmall/activity/export-excel"],"general.getActivityAttendancePage_1":["GET","/admin-api/pythmall/activity-attendance/page"],"general.getActivityAttendance":["GET","/admin-api/pythmall/activity-attendance/get"],"general.exportActivityAttendanceExcel":["GET","/admin-api/pythmall/activity-attendance/export-excel"],"general.deleteTradeOrder":["DELETE","/admin-api/pythmall/trade-order/delete"],"general.deleteTradeOrderList":["DELETE","/admin-api/pythmall/trade-order/delete-list"],"general.deleteProductSpu":["DELETE","/admin-api/pythmall/product/delete"],"general.deleteCategory":["DELETE","/admin-api/pythmall/product-category/delete"],"general.deleteActivity":["DELETE","/admin-api/pythmall/activity/delete"],"general.deleteActivityList":["DELETE","/admin-api/pythmall/activity/delete-list"],"general.deleteActivityAttendance":["DELETE","/admin-api/pythmall/activity-attendance/delete"],"general.deleteActivityAttendanceList":["DELETE","/admin-api/pythmall/activity-attendance/delete-list"]},ye=Object.create(null),be=(e,a,t)=>{const r=e.join(".");if(ye[r])return ye[r];const s=new Proxy(function(){},{get(r,s){const n=[...e,s];return be(n,a,t)},apply(e,s,[n]){const o=ge[r];if(!o)throw new Error(`the api path of \`${r}\` is not found`);const i={...t[r],...n},[p,d]=o,m=i.pathParams,l=d.replace(/\{([^}]+)\}/g,(e,a)=>m[a]);delete i.pathParams;let c=i.data;if("[object Object]"===Object.prototype.toString.call(c)&&"undefined"!=typeof FormData){let e=!1;const a=new FormData;for(const t in c)a.append(t,c[t]),c[t]instanceof Blob&&(e=!0);c=e?a:c}return new q(p.toUpperCase(),a,l,i,c)}});return ye[r]=s,s},Te=(he=me,Ee={},new Proxy({},{get:(e,a)=>ue([a],he,Ee)}));var he,Ee;const fe=((e,a)=>new Proxy({},{get:(t,r)=>be([r],e,a)}))(me,{});export{Te as M,fe as P};
